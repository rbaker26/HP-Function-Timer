#pragma once

#include <random>
#include <array>

class RandArray 
{
	std::array<int, 50000> array;

	unsigned int cap;
public:

	//*********************************************************************************
	RandArray(unsigned int cap) 
	{
		this->cap = cap;

		std::default_random_engine generator;
		std::uniform_int_distribution<int> distribution(0, (cap * 9) );

		for (unsigned int i = 0; i < cap; ++i)
		{
			array[i] = distribution(generator);
		}
	}
	//*********************************************************************************


	//*********************************************************************************
	~RandArray() {}
	//*********************************************************************************


	//*********************************************************************************
	int* begin()
	{
		return &(array[0]);
	}
	//*********************************************************************************
	
	//*********************************************************************************
	int* end()
	{
		return &(array[ cap - 1]);
	}
	//*********************************************************************************


	//*********************************************************************************
	unsigned int size()
	{
		return cap;
	}
	//*********************************************************************************

};

